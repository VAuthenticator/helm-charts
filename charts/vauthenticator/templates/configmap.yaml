{{- if eq .Values.managementUi.enabled true }}

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: management-ui-config
  namespace: {{ .Release.Namespace }}
data:
  application.yml: |
    endSessionWithoutDiscovery: true
    oidcEndSessionUrl: {{ .Values.application.baseUrl }}/oidc/logout
    auth.oidcIss: {{ .Values.application.baseUrl }}

    postLogoutRedirectUri: {{ .Values.managementUi.baseUrl }}/secure/admin/index

    spring:
      main:
        lazy-initialization: true

      security:
        oauth2:
          client:
            registration:
              client:
                client-id: {{ .Values.managementUi.sso.clientApp.clientId }}
                client-secret: {{ .Values.managementUi.sso.clientApp.clientSecret }}
                client-name: VAuthenticator Management UI
                provider: vauthenticator
                scope:
                  - "openid"
                  - "profile"
                  - "email"
                  - "admin:key-reader"
                  - "admin:key-editor"
                redirect-uri: {{ .Values.managementUi.baseUrl }}/login/oauth2/code/client
                authorization-grant-type: authorization_code
            provider:
              vauthenticator:
                authorization-uri: {{ .Values.application.baseUrl }}/oauth2/authorize
                token-uri: {{ .Values.application.backChannelBaseUrl }}/oauth2/token
                user-info-uri: {{ .Values.application.backChannelBaseUrl }}/userinfo
                jwk-set-uri: {{ .Values.application.backChannelBaseUrl }}/oauth2/jwks
                user-name-attribute: email
      data:
        redis:
          database: {{ .Values.managementUi.redis.database }}
          host: {{ .Values.application.redis.host }}

    server:
      port: {{ .Values.managementUi.server.port }}
      forward-headers-strategy: framework
      servlet:
        context-path: /
      http2:
        enabled: true
      compression:
        enabled: true
        min-response-size: 1KB

    management:
      server:
        port: 8081
        servlet:
          context-path: /
      endpoints:
        web:
          exposure:
            include: "*"
      endpoint:
        shutdown:
          enabled: true
        health:
          show-details: ALWAYS

    vauthenticator:
      session-management:
        enabled: true
        rp-iframe:
          host: {{ .Values.managementUi.baseUrl }}
          polling-rate: 5s
          origin: ${vauthenticator.host}
          logout-uri: /logout
      client:
        registrationId: client
      host: {{ .Values.application.baseUrl }}
      backChannelHost: {{ .Values.application.backChannelBaseUrl }}

    assetServer:
      on-s3:
      enabled: {{ .Values.managementUi.assetServer.onS3.enabled }}
      cache:
        ttl: {{ .Values.managementUi.assetServer.onS3.cache.ttl }}
      baseUrl: {{ .Values.managementUi.assetServer.baseUrl }}

    {{ end }}