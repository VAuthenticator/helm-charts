in-namespace:
  redis:
    enabled: true

aws:
  region: xxxxxxxxx
  iamUser:
    accessKey: xxxxxxxxx
    secretKey: xxxxxxxxx
    enabled: false
  eks:
    serviceAccount:
      enabled: false
      iamRole:
        arn: arn:aws:iam::ACCOUNT_ID:role/IAM_ROLE_NAME

logging:
  enabled: false
  kibana:
    host: kibana.host:5601
  elasticSearch:
    host: elasticsearch.host:9200

application:
  pod:
    probes:
      liveness:
        initialDelaySeconds: 10
        periodSeconds: 30
      rediness:
        initialDelaySeconds: 10
        periodSeconds: 30

  service:
    type: ClusterIP

  ingress:
    host: "*"
    annotations: { }
    tls: { }
    enabled: true
    class: nginx


  resources:
    requests:
      cpu: "256m"
      memory: "256Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"
  replicaCount: 1

  image:
    repository: mrflick72/vauthenticator-k8s
    pullPolicy: Always
    tag: "latest"

  lables: { }

  selectorLabels:
    app: vauthenticator

  podAnnotations: { }

  redis:
    database: 0
    host: vauthenticator-redis-master.auth.svc.cluster.local

  server:
    port: 8080
    servlet:
      contextPath: /vauthenticator

  baseUrl: http://application-example-host.com

  dynamoDb:
    account:
      tableName: your_VAuthenticator_Account_table_name
      role:
        tableName: your_VAuthenticator_Account_Role_table_name
    role:
      tableName: your_VAuthenticator_Role_table_name
    clientApplication:
      tableName: your_VAuthenticator_ClientApplication_table_name
    keys:
      tableName: your_VAuthenticator_Keys_table_name

  accountSync:
    listener:
      sleeping: 1m
      queueUrl: your_vauthenticator-account_updates_queue_name
      maxNumberOfMessages: 5
      visibilityTimeout: 20
      waitTimeSeconds: 20


managementUi:
  enabled: false
  pod:
    probes:
      liveness:
        initialDelaySeconds: 10
        periodSeconds: 30
      rediness:
        initialDelaySeconds: 10
        periodSeconds: 30

  service:
    type: ClusterIP

  ingress:
    host: "*"
    annotations: { }
    tls: { }
    enabled: true
    class: nginx


  resources:
    requests:
      cpu: "256m"
      memory: "256Mi"
    limits:
      cpu: "512m"
      memory: "512Mi"

  replicaCount: 1

  image:
    repository: mrflick72/vauthenticator-management-ui-k8s
    pullPolicy: Always
    tag: "latest"

  lables: { }

  selectorLabels:
    app: vauthenticator-management-ui

  podAnnotations: { }

  redis:
    database: 1
    host: vauthenticator-redis-master.auth.svc.cluster.local

  server:
    port: 8080
    servlet:
      contextPath: /vauthenticator-management-ui

  baseUrl: http://application-example-host.com


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

redis:
  auth:
    enabled: false
  replica:
    replicaCount: 1